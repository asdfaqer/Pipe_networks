/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void Start(GButton source, GEvent event) { //_CODE_:Start_button:839361:
  source.setVisible(false);
  window1.setVisible(true);
  scene = "build mode";
  println("Start_button - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:Start_button:839361:

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:758463:
  appc.background(230);
} //_CODE_:window1:758463:

synchronized public void key_pressed(PApplet appc, GWinData data, KeyEvent kevent) { //_CODE_:window1:542730:
  println("window1 - key event " + kevent);
  switch(appc.key){
    case 'r':
      if(!appc.keyPressed){
        cur_orientation = (cur_orientation + 1)%4;
      }
      print(cur_orientation);
      break;
   case 's':
     pipe_type = "delete";
     if(!appc.keyPressed){
        pipe_type = dropList1.getSelectedText();
      }
     break;
  }
} //_CODE_:window1:434800:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:dropList1:532416:
  println("dropList1 - GDropList >> GEvent." + event + " @ " + millis());
  pipe_type = source.getSelectedText();
  drawing = true;
} //_CODE_:dropList1:532416:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:823717:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  int id = 0;
  for(int i = 0; i < 4; i++){
    for(int j = 0; j < canvas_definition; j++){
      switch(i){
        case 0:
          id = j*canvas_definition;
          break;
        case 1:
          id = j;
          break;
        case 2:
          id = 4+j*canvas_definition;
          break;
        case 3:
          id = j + canvas_definition*(canvas_definition-1);
          break;
      }
      switch(flow_path[i][j]){
        //water
        case 1://start
          start = new Tile(id, i+1);
          break;
        case -1://end
          end = new Tile(id, i+1);
          break;
        //oil
        case 2://start
          break;
        case -2://end
          break;
      }
    }
  }
  println(start.id, start.entrance, end.id, end.entrance);
  verify();
  println(Verified_pipes);
  find_path_to_endpoint(start);
  println(path);
  r = 0;
  scene = "computer solving puzzle";
} //_CODE_:button1:823717:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:290036:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
  drawing = false;
  selecting_start_and_end = true;
  pipe_type = "water start";
} //_CODE_:button2:290036:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  Start_button = new GButton(this, 220, 340, 160, 80);
  Start_button.setText("Strat");
  Start_button.addEventHandler(this, "Start");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 300, 600, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  window1.addKeyHandler(this, "key_pressed");
  dropList1 = new GDropList(window1, 18, 110, 90, 120, 5, 10);
  dropList1.setItems(loadStrings("list_532416"), 0);
  dropList1.addEventHandler(this, "dropList1_click1");
  label1 = new GLabel(window1, 110, 30, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Build Tools");
  label1.setOpaque(false);
  label2 = new GLabel(window1, 22, 80, 80, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Pipe Types");
  label2.setOpaque(false);
  button1 = new GButton(window1, 110, 400, 80, 30);
  button1.setText("Solve");
  button1.addEventHandler(this, "button1_click1");
  label3 = new GLabel(window1, 20, 260, 80, 20);
  label3.setText("Rules:");
  label3.setOpaque(false);
  label4 = new GLabel(window1, 26, 283, 241, 23);
  label4.setTextAlign(GAlign.LEFT, GAlign.TOP);
  label4.setText("- Select a pipe type through the drop list");
  label4.setOpaque(false);
  label5 = new GLabel(window1, 25, 306, 239, 19);
  label5.setText("- Press \" r \" to rotate the pipe");
  label5.setOpaque(false);
  label6 = new GLabel(window1, 25, 325, 244, 22);
  label6.setText("- Press \"m\" to mirror the pipe");
  label6.setOpaque(false);
  label7 = new GLabel(window1, 25, 348, 247, 20);
  label7.setTextAlign(GAlign.LEFT, GAlign.TOP);
  label7.setText("- Click on the canvas to place the pipe");
  label7.setOpaque(false);
  label8 = new GLabel(window1, 25, 369, 244, 20);
  label8.setTextAlign(GAlign.LEFT, GAlign.TOP);
  label8.setText("- Hold \"SHIFT\" and click to delete unwanted pipes");
  label8.setOpaque(false);
  button2 = new GButton(window1, 9, 452, 80, 30);
  button2.setText("Add Water");
  button2.addEventHandler(this, "button2_click1");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GButton Start_button; 
GWindow window1;
GDropList dropList1; 
GLabel label1; 
GLabel label2; 
GButton button1; 
GLabel label3; 
GLabel label4; 
GLabel label5; 
GLabel label6; 
GLabel label7; 
GLabel label8; 
GButton button2; 
